=pod

=head1 NAME

 CMP_CERTREPMESSAGE_PKIStatus_get,
 CMP_CERTREPMESSAGE_certResponse_get0,
 CMP_CERTREPMESSAGE_cert_get0,
 CMP_CERTREPMESSAGE_cert_get1,
 CMP_CERTREPMESSAGE_encCert_get1,
 CMP_CERTRESPONSE_PKIStatus_get,
 CMP_CERTSTATUS_set_certHash,
 CMP_ERRORMSGCONTENT_PKIFailureInfo_print,
 CMP_ERRORMSGCONTENT_PKIStatus_get,
 CMP_ERRORMSGCONTENT_PKIStatus_print,
 CMP_PKIFAILUREINFO_check,
 CMP_PKIHEADER_generalInfo_item_push0,
 CMP_PKIHEADER_new_senderNonce,
 CMP_PKIHEADER_set0_recipient,
 CMP_PKIHEADER_set0_sender,
 CMP_PKIHEADER_set1,
 CMP_PKIHEADER_set1_protectionAlgor,
 CMP_PKIHEADER_set1_recipNonce,
 CMP_PKIHEADER_set1_recipient,
 CMP_PKIHEADER_set1_sender,
 CMP_PKIHEADER_set1_senderKID,
 CMP_PKIHEADER_set1_transactionID,
 CMP_PKIHEADER_set_messageTime,
 CMP_PKIHEADER_set_version,
 CMP_PKIMESSAGE_check_implicitConfirm,
 CMP_PKIMESSAGE_genm_item_push0,
 CMP_PKIMESSAGE_get_bodytype,
 CMP_PKIMESSAGE_parse_error_msg,
 CMP_PKIMESSAGE_set_bodytype,
 CMP_PKIMESSAGE_set_implicitConfirm,
 CMP_PKISTATUSINFO_PKIFailureInfo_print,
 CMP_PKISTATUSINFO_PKIstatus_get,
 CMP_PKISTATUSINFO_PKIstatus_print,
 CMP_get_protectionAlgor_by_nid,
 CMP_get_protectionAlgor_pbmac,
 CMP_protection_new

=head1 SYNOPSIS

 #include <openssl/cmp.h>

long CMP_CERTREPMESSAGE_PKIStatus_get( CMP_CERTREPMESSAGE *certRep, long certReqId);
CMP_CERTRESPONSE *CMP_CERTREPMESSAGE_certResponse_get0( CMP_CERTREPMESSAGE *certRep, long certReqId);
X509 *CMP_CERTREPMESSAGE_cert_get0( CMP_CERTREPMESSAGE *certRep, long certReqId);
X509 *CMP_CERTREPMESSAGE_cert_get1( CMP_CERTREPMESSAGE *certRep, long certReqId);
X509 *CMP_CERTREPMESSAGE_encCert_get1( CMP_CERTREPMESSAGE *certRep, long certReqId, EVP_PKEY *pkey);
long CMP_CERTRESPONSE_PKIStatus_get( CMP_CERTRESPONSE *resp);
int CMP_CERTSTATUS_set_certHash( CMP_CERTSTATUS *certStatus, const X509 *cert);
char *CMP_ERRORMSGCONTENT_PKIFailureInfo_print( CMP_ERRORMSGCONTENT *error);
long CMP_ERRORMSGCONTENT_PKIStatus_get( CMP_ERRORMSGCONTENT *error);
char *CMP_ERRORMSGCONTENT_PKIStatus_print( CMP_ERRORMSGCONTENT *error);
int CMP_PKIFAILUREINFO_check( ASN1_BIT_STRING *failInfo, int codeBit);
int CMP_PKIHEADER_generalInfo_item_push0(CMP_PKIHEADER *hdr, const CMP_INFOTYPEANDVALUE *itav);
int CMP_PKIHEADER_new_senderNonce(CMP_PKIHEADER *hdr);
int CMP_PKIHEADER_set0_recipient(CMP_PKIHEADER *hdr, const X509_NAME *nm);
int CMP_PKIHEADER_set0_sender(CMP_PKIHEADER *hdr, const X509_NAME *nm);
int CMP_PKIHEADER_set1(CMP_PKIHEADER *hdr, CMP_CTX *ctx);
int CMP_PKIHEADER_set1_protectionAlgor(CMP_PKIHEADER *hdr, const X509_ALGOR *alg);
int CMP_PKIHEADER_set1_recipNonce(CMP_PKIHEADER *hdr, const ASN1_OCTET_STRING *recipNonce);
int CMP_PKIHEADER_set1_recipient(CMP_PKIHEADER *hdr, const X509_NAME *nm);
int CMP_PKIHEADER_set1_sender(CMP_PKIHEADER *hdr, const X509_NAME *nm);
int CMP_PKIHEADER_set1_senderKID(CMP_PKIHEADER *hdr, const ASN1_OCTET_STRING *senderKID);
int CMP_PKIHEADER_set1_transactionID(CMP_PKIHEADER *hdr, const ASN1_OCTET_STRING *transactionID);
int CMP_PKIHEADER_set_messageTime(CMP_PKIHEADER *hdr);
int CMP_PKIHEADER_set_version(CMP_PKIHEADER *hdr, int version);
int CMP_PKIMESSAGE_check_implicitConfirm(CMP_PKIMESSAGE *msg);
int CMP_PKIMESSAGE_genm_item_push0(CMP_PKIMESSAGE *msg, const CMP_INFOTYPEANDVALUE *itav);
int CMP_PKIMESSAGE_get_bodytype( CMP_PKIMESSAGE *msg);
char *CMP_PKIMESSAGE_parse_error_msg( CMP_PKIMESSAGE *msg, char *errormsg, int bufsize);
int CMP_PKIMESSAGE_set_bodytype( CMP_PKIMESSAGE *msg, int type);
int CMP_PKIMESSAGE_set_implicitConfirm(CMP_PKIMESSAGE *msg);
char *CMP_PKISTATUSINFO_PKIFailureInfo_print( CMP_PKISTATUSINFO *statusInfo);
long CMP_PKISTATUSINFO_PKIstatus_get( CMP_PKISTATUSINFO *statusInfo);
char *CMP_PKISTATUSINFO_PKIstatus_print( CMP_PKISTATUSINFO *statusInfo);
X509_ALGOR *CMP_get_protectionAlgor_by_nid(int nid);
X509_ALGOR *CMP_get_protectionAlgor_pbmac();
ASN1_BIT_STRING *CMP_protection_new(CMP_PKIMESSAGE *pkimessage, X509_ALGOR *_algor, const EVP_PKEY *pkey, const ASN1_OCTET_STRING *secret);

=head1 DESCRIPTION


=head1 NOTES

CMP is defined in RFC 4210 (and CRMF in RFC 4211).

The implementation of CMP for OpenSSL is still work in progress. The API might change every release!

=head1 RETURN VALUES



=head1 EXAMPLE


=head1 TODO

A lot!

=head1 SEE ALSO

CMP_CTX, CMP_session, CMP_msg, CMP_http
